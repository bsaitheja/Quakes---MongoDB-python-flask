1)Search for and count all earthquakes that occurred with a magnitude greater than 5.0

	<form method='POST' action="/mag">
			
			Magnitude <input type="text" name="mag">
			<input type="submit" >
		
		</form>
		
		
	@app.route('/mag', methods=['POST','GET'])
def list():
    field=request.form['mag']
    querry="Select id,time,latitude,longitude,depth,mag,place,type,magSource from all_month WHERE mag >  '"+field+"' "
    cnxx= pyodbc.Connection = pyodbc.connect('Driver={ODBC Driver 17 for SQL Server};''Server=tcp:assign1server.database.windows.net,1433;''Database=assignment1;Uid=saitheja;Pwd=9705004946S@i;')
    crsr = cnxx.cursor()
    crsr.execute(querry)
    rows = crsr.fetchall()
    querry1="Select count(*) from all_month  WHERE mag >  '"+field+"' "
    crsr.execute(querry1)
    count=crsr.fetchone()
    print(count)
    cnxx.close()
    return render_template("list.html",rows = rows,mag=field,count=count)
	
	
2)Search for 2.0 to 2.5, 2.5 to 3.0, etc magnitude quakes for a one week, a range of days or the whole 30 days.
<form method='POST' action="/rangesearch">
			
			Magnitude start<input type="text" name="mag1"> <br> <br>
			Magnitude end<input type="text" name="mag2"> <br> <br>
			<input type="submit" >
		
		</form>
		
		
	@app.route('/rangesearch',methods=['POST','GET'])
def rangesearch():
    mag1=request.form['mag1']
    mag2=request.form['mag2']
    cnxx= pyodbc.Connection = pyodbc.connect('Driver={ODBC Driver 17 for SQL Server};''Server=tcp:assign1server.database.windows.net,1433;''Database=assignment1;Uid=saitheja;Pwd=9705004946S@i;')
    crsr = cnxx.cursor()
    querry="Select id,time,latitude,longitude,depth,mag,place,type,magSource from all_month WHERE mag >  '"+mag1+"' and mag <'"+mag2+"'"
    crsr.execute(querry)
    rows = crsr.fetchall()
    querry1="Select count(*) from all_month  WHERE mag >  '"+mag1+"' and mag <'"+mag2+"'"
    crsr.execute(querry1)
    count=crsr.fetchone()
    print(count)
    cnxx.close()
    return render_template("list.html",rows = rows,count=count)
	
	

3)Find earthquakes that were near (20 km, 50 km?) of a specified location.

<form method='POST' action="/locsearch">
			Place<input type="text" name="place"> <br> <br>
			Distance <input type="text" name="kms"> <br> <br>
			<input type="submit" >
		</form>
		
@app.route('/locsearch',methods=['POST','GET'])
def locsearch():
    place=request.form['place']
    kms=request.form['kms']
    cnxx= pyodbc.Connection = pyodbc.connect('Driver={ODBC Driver 17 for SQL Server};''Server=tcp:assign1server.database.windows.net,1433;''Database=assignment1;Uid=saitheja;Pwd=9705004946S@i;')
    crsr = cnxx.cursor()
    querry="SELECT id,time,latitude,longitude,depth,mag,place,type,magSource FROM all_month where place like '%"+place+"' and place like '%km%' and CAST(left(place, (charindex('k', place)-1)) AS int)<='"+kms+"'"
    crsr.execute(querry)
    rows = crsr.fetchall()
    q2="SELECT count(*) FROM all_month where place like '%"+place+"' and place like '%km%' and CAST(left(place, (charindex('k', place)-1)) AS int)<='"+kms+"'"
    crsr.execute(q2)
    count=crsr.fetchone()
    print(count)
    cnxx.close()
    return render_template("list.html",rows = rows,count=count)

4) Find clusters of earthquakes
@app.route('/cluster',methods=['POST','GET'])
def cluster():
    cnxx= pyodbc.Connection = pyodbc.connect('Driver={ODBC Driver 17 for SQL Server};''Server=tcp:assign1server.database.windows.net,1433;''Database=assignment1;Uid=saitheja;Pwd=9705004946S@i;')
    crsr = cnxx.cursor()
    querry="SELECT mag,COUNT(*) FROM all_month  group by mag"
    crsr.execute(querry)
    rows = crsr.fetchall()
    cnxx.close()
    return render_template("cluster.html",rows = rows)
	
	<table id='customers'>
         <tr>
            <th><b>Magnitude</b></th>
			<th><b>count</b></th>
         </tr>
         {% for col in rows %}
         <tr>
            <td>{{col[0]}}</td>
            <td>{{col[1]}}</td> 
         </tr>
         {% endfor %}
      </table>

5) Do large (>4.0 mag) occur more often at night? 

@app.route('/nightdata',methods=['POST','GET'])
def nightdata():
    cnxx= pyodbc.Connection = pyodbc.connect('Driver={ODBC Driver 17 for SQL Server};''Server=tcp:assign1server.database.windows.net,1433;''Database=assignment1;Uid=saitheja;Pwd=9705004946S@i;')
    crsr = cnxx.cursor()
    crsr.execute('SELECT COUNT(*) FROM all_month where DATEPART(HOUR,time) >=18 or DATEPART(HOUR,time) <=6 ')
    count=crsr.fetchone()
    crsr.execute('SELECT COUNT(*) FROM all_month ')
    count2=crsr.fetchone()

    display=""

    if(count[0]>(count2[0]-count[0])):
        display="Earthqakes occur more at night(6pm to 6am) than in the day,out of "+str(count2[0])+" earth quakes "+str(count[0])+" occured in the night"
    else:
        display="Earthqakes occur more at day(6am to 6pm) than in the night,out of "+str(count2[0])+" earth quakes "+str(count2[0]-count[0])+" occured in the day time"
    cnxx.close()
    return render_template("newrecord.html",display = display)
	
link : https://adb7581.azurewebsites.net/